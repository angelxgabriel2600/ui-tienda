
package ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "OrdenWebService", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface OrdenWebService {


    /**
     * 
     * @param idOrden
     * @return
     *     returns ws.Orden
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarOrdenPorId", targetNamespace = "http://ws/", className = "ws.MostrarOrdenPorId")
    @ResponseWrapper(localName = "mostrarOrdenPorIdResponse", targetNamespace = "http://ws/", className = "ws.MostrarOrdenPorIdResponse")
    @Action(input = "http://ws/OrdenWebService/mostrarOrdenPorIdRequest", output = "http://ws/OrdenWebService/mostrarOrdenPorIdResponse")
    public Orden mostrarOrdenPorId(
        @WebParam(name = "idOrden", targetNamespace = "")
        int idOrden);

    /**
     * 
     * @param orden
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "actualizarOrden", targetNamespace = "http://ws/", className = "ws.ActualizarOrden")
    @ResponseWrapper(localName = "actualizarOrdenResponse", targetNamespace = "http://ws/", className = "ws.ActualizarOrdenResponse")
    @Action(input = "http://ws/OrdenWebService/actualizarOrdenRequest", output = "http://ws/OrdenWebService/actualizarOrdenResponse")
    public int actualizarOrden(
        @WebParam(name = "orden", targetNamespace = "")
        Orden orden);

    /**
     * 
     * @param orden
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "agregarOrden", targetNamespace = "http://ws/", className = "ws.AgregarOrden")
    @ResponseWrapper(localName = "agregarOrdenResponse", targetNamespace = "http://ws/", className = "ws.AgregarOrdenResponse")
    @Action(input = "http://ws/OrdenWebService/agregarOrdenRequest", output = "http://ws/OrdenWebService/agregarOrdenResponse")
    public int agregarOrden(
        @WebParam(name = "orden", targetNamespace = "")
        Orden orden);

    /**
     * 
     * @param idOrden
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "eliminarOrden", targetNamespace = "http://ws/", className = "ws.EliminarOrden")
    @ResponseWrapper(localName = "eliminarOrdenResponse", targetNamespace = "http://ws/", className = "ws.EliminarOrdenResponse")
    @Action(input = "http://ws/OrdenWebService/eliminarOrdenRequest", output = "http://ws/OrdenWebService/eliminarOrdenResponse")
    public int eliminarOrden(
        @WebParam(name = "idOrden", targetNamespace = "")
        int idOrden);

    /**
     * 
     * @return
     *     returns java.util.List<ws.Orden>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarOrden", targetNamespace = "http://ws/", className = "ws.MostrarOrden")
    @ResponseWrapper(localName = "mostrarOrdenResponse", targetNamespace = "http://ws/", className = "ws.MostrarOrdenResponse")
    @Action(input = "http://ws/OrdenWebService/mostrarOrdenRequest", output = "http://ws/OrdenWebService/mostrarOrdenResponse")
    public List<Orden> mostrarOrden();

    /**
     * 
     * @return
     *     returns java.util.List<ws.Cliente>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarCliente", targetNamespace = "http://ws/", className = "ws.MostrarCliente")
    @ResponseWrapper(localName = "mostrarClienteResponse", targetNamespace = "http://ws/", className = "ws.MostrarClienteResponse")
    @Action(input = "http://ws/OrdenWebService/mostrarClienteRequest", output = "http://ws/OrdenWebService/mostrarClienteResponse")
    public List<Cliente> mostrarCliente();

    /**
     * 
     * @return
     *     returns java.util.List<ws.Producto>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarProducto", targetNamespace = "http://ws/", className = "ws.MostrarProducto")
    @ResponseWrapper(localName = "mostrarProductoResponse", targetNamespace = "http://ws/", className = "ws.MostrarProductoResponse")
    @Action(input = "http://ws/OrdenWebService/mostrarProductoRequest", output = "http://ws/OrdenWebService/mostrarProductoResponse")
    public List<Producto> mostrarProducto();

}
